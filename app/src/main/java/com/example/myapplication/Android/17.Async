



비동기 -> Async
동기 -> Sync

동기방식
    - 작업을 순서대로 진행한다
    - A -> B -> C -> D
    - 위에서부터 아래로 실행

비동기방식
    - 쓰레드를 만들어서 작업을 따로 처리한다

                    결과를 받는다
------------------------------------------------------------->
         |  |  |    |
        ------------
            작업

안드로이드에서 Async 다루는 방법
    - AsyncTask 상속받는다
        -> onPreExcute       : 쓰레드 출발하기전에 할 작업
        -> doIntbackgroun    : 쓰레드가 할 작업
        -> onPregressUpdate  : 중간중간에 MainThread로 온다
        -> onPostExcute      : 작업을 다 마친 후 MainThread

Async의 장점
    - Main Thread를 기다리게 할 필요가 없다
    - 네트워크 작업

Async의 단점
    - 재사용이 불가능 하다
    - 구현된 Activity가 종료될경우(혹은 다른 Activity로 넘어갔을때) 따라서 종료되지 않는다.
    - AsyncTask는 하나만 실행될 수 있다
      (Async하나가 실행되고 있으면 다른 Async는 기다렸다가 끝나면 실행된다, 병렬처리x)
